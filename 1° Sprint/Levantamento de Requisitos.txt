						*** Levantamento de Requisitos ***



- O que o cliente deseja - o que ele precisa para facilitar seu dia a dia;

- Necessidades - o que tem causado conflito no cotidiano;

- Refatoração - melhorar o código;

- Planejar - como irá montar seu projeto;

- Funcionalidade - o que será colocado para funcionar no projeto;

- Negócio - valores;

- Protipação - montagem do projeto;

- Diagrama de casos de uso;

- Diagrama de classes;

- Documentação.

===========================================================================================================================================

				"Requisitos são solicitações, desejos, necessidades. 
			Um requisito é a propriedade que um software exibe para solucionar problemas reais,
 				é a conjuntura indispensável para satisfazer um objeto."


(RF001) Requisito funcional : é aquilo que o sistema precisa ter. (CRUD)


(RNF001) Requisito ñ funional : referente a desempenho, segurança, usabilidade, confiabilidade.


(RN001) Regra de negócio : é a condição imposta pra que ele atenda.


Requisito de software: são as ações que o software deve executar, 
 possuindo características e condições próprias, de forma a automatizar uma tarefa de um processo de negócio. 
 Aqui definimos os requisitos funcionais e não funcionais, e, conforme o método IRON, Requisitos de Dados e Regras de Execução.


Diagrama de casos de uso : Esse diagrama documenta o que o sistema faz do ponto de vista do usuário. 
 Em outras palavras, ele descreve as principais funcionalidades do sistema e a interação dessas funcionalidades com os usuários do mesmo sistema. 
 Nesse diagrama não nos aprofundamos em detalhes técnicos que dizem como o sistema faz.

	*** Diagramas de Casos de Uso são compostos basicamente por quatro partes:

		Cenário: Sequência de eventos que acontecem quando um usuário interage com o sistema.
		Ator: Usuário do sistema, ou melhor, um tipo de usuário.
		Use Case: É uma tarefa ou uma funcionalidade realizada pelo ator (usuário).
		Comunicação: é o que liga um ator com um caso de uso.


		UML é um acrônimo para a expressão Unified Modeling Language. Pela definição de seu nome, 
	vemos que a UML é uma linguagem que define uma série de artefatos que nos ajuda na tarefa de modelar e documentar os sistemas orientados a objetos que desenvolvemos.

		Ela possui nove tipos de diagramas que são usados para documentar e modelar diversos aspectos dos sistemas.



Diagrama de classes :  é uma representação da estrutura e relações das classes que servem de modelo para objetos. 
 Podemos afirmar de maneira mais simples que seria um conjunto de objetos com as mesmas características, 
 assim saberemos identificar objetos e agrupá-los, de forma a encontrar suas respectivas classes. 
 Na Unified Modeling Language (UML) em diagrama de classe, 
 uma classe é representada por um retângulo com três divisões, são elas: O nome da classe, seus atributos e por fim os métodos.

===========================================================================================================================================

							*** Regra dos 3B's ***


				Bom 				Bonito 				Barato


bom + barato !== bonito;

bom + bonito !== barato;

bonito + barato ==! bom;

bom + bonito + barato === undefined.

===========================================================================================================================================

